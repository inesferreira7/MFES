class Platform
types
-- TODO Define types here
values
-- TODO Define values here

	public Activity = {<Embassador>, <Sponsor>,<Entertainer>}
	
instance variables
-- TODO Define instance variables here
	public celebrities : seq of Celebrity := [];
	public agencies : seq of Agency := [];
operations
-- TODO Define operations here
	public Platform : () ==> Platform
	Platform() == return self;
	
	public getCelebsWithActivity : Activity ==> seq of Celebrity
	getCelebsWithActivity(act) == (
		dcl i: int;
		dcl celebs: seq of Celebrity := [];
		for i = 1 to len celebrities do (
			if celebrities(i).getActivity() = act
			then celebs := celebs ^ [celebrities(i)] ;
		);
		return celebs
	);
	
	public addCelebrity : Celebrity ==> ()
	addCelebrity(c) == celebrities := celebrities ^ [c];
	
	public addAgency : Agency ==> ()
	addAgency(a) == agencies := agencies ^ [a];
	
	public getCelebrities : () ==> seq of Celebrity
	getCelebrities() == return celebrities;
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Platform